# Import the necessary packages
import numpy as np
import matplotlib
#matplotlib.use('Agg')                            # For running on the supercomputer
import matplotlib.pyplot as plt

####### Definitions #######
# Look at what some of the leaves look like
def visualize(images, y):
	'''
	#center_y, center_x = ndi.center_of_mass(img)
	print images[0,:,:,0].shape
	allm = np.concatenate((images[0,:,:,0], images[1,:,:,0], images[2,:,:,0], images[3,:,:,0]))
	plt.imshow(allm, cmap = 'binary')
	#plt.scatter(center_x, center_y)
	plt.show()
	'''
	print y[0:20]

	# Setting up our grid
	num_row = 3
	num_col = 3
	for i in range(num_row):
		for j in range(num_col):
			if (j == 0):
				images1 = images[j + i * num_col,:,:,0]
	
			else:
				temp = images[j + i * num_col,:,:,0]
				images1 = np.concatenate((images1, temp), axis = 1)
			
		if (i == 0):
			images2 = images1
		else:
			images2 = np.concatenate((images2, images1), axis = 0)

	# Displaying the grid
	a = plt.figure(1)
	plt.imshow(images2, cmap = 'binary', interpolation = 'none')
	a.show()

	raw_input()

	count = 0
	for j in range(len(y)):
		if y[j] == 73:
			print j
			count += 1
			if count < 6:
				if (count == 1):
					pics = images[j,:,:,0]
	
				else:
					temp = images[j,:,:,0]
					pics = np.concatenate((pics, temp), axis = 1)
			else:
				if (count == 6):
					pics2 = images[j,:,:,0]
	
				else:
					temp = images[j,:,:,0]
					pics2 = np.concatenate((pics2, temp), axis = 1)

	al = np.concatenate((pics, pics2), axis = 0)

	d = plt.figure(2)
	plt.imshow(al, cmap = 'binary', interpolation = 'none')
	ax = plt.gca()
	ax.axes.get_xaxis().set_visible(False)
	ax.axes.get_yaxis().set_visible(False)
	b.show()

	raw_input()
	return

